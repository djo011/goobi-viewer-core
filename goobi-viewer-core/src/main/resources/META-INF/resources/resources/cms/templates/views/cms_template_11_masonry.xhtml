<ui:composition
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:composite="http://xmlns.jcp.org/jsf/composite"
	xmlns:viewer="http://xmlns.jcp.org/jsf/composite/components/partner"
	xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
	xmlns:widgetComponent="http://xmlns.jcp.org/jsf/composite/components/widgets"
	template="/resources/themes/#{navigationHelper.theme}/template.html"
	xmlns:pretty="http://ocpsoft.com/prettyfaces/3.3.3">

	<composite:interface>
		<composite:attribute name="component" required="true" />
		<composite:attribute name="text" required="false"
			default="#{cc.attrs.component.getContentItem('text')}" />
		<composite:attribute name="grid" required="false"
			default="#{cc.attrs.component.getContentItem('grid')}" />
	</composite:interface>


    <composite:implementation>
    
            <div id="templateMasonry" class="tpl-masonry content-component__legacy-full-width">

                <div class="tpl-masonry__text">
                    <h:outputText escape="false" value="#{cc.attrs.text.content.text.textOrDefault}"></h:outputText>
                </div>

                <!-- LOADER -->
                <div class="tpl-masonry__loader" style="display: none;">
                    <img src="#{request.contextPath}/resources/images/infinity_loader.gif" alt="Masonry Loader" />
                    #{msg.cms_masonryLoading}...
                </div>

                <!-- MASONRY -->
                <div class="grid">
                    <div class="grid-sizer"></div>
                    <div class="gutter-sizer"></div>
                </div>

                <script type="text/javascript" src="#{request.contextPath}/resources/javascript/libs/masonry/masonry.min.js"></script>
                <script type="text/javascript">
                	$.ajax( {
						url : "#{cc.attrs.grid.content.tileGridUrl}",
						type : "GET",
						datatype : "JSON"
					}).then( function( data ) {
						const masonryConfig = {
								$grid : $(".grid"),
								language: currentLang
						};
		                $(document).ready(() => {                		
							cmsJS.masonry.init( masonryConfig, data);
						});
                	});
                	
				</script>
			</div>
     </composite:implementation>
</ui:composition>
